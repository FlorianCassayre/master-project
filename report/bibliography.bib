@article{Paulson2019,
  author = {Lawrence C. Paulson and Tobias Nipkow and Makarius Wenzel},
  title = {From LCF to Isabelle/HOL},
  year = {2019},
  issue_date = {Dec 2019},
  publisher = {Springer-Verlag},
  address = {Berlin, Heidelberg},
  volume = {31},
  number = {6},
  issn = {0934-5043},
  url = {https://doi.org/10.1007/s00165-019-00492-1},
  doi = {10.1007/s00165-019-00492-1},
  abstract = {Interactive theorem provers have developed dramatically over the past four decades, from primitive beginnings to today’s powerful systems. Here, we focus on Isabelle/HOL and its distinctive strengths. They include automatic proof search, borrowing techniques from the world of first order theorem proving, but also the automatic search for counterexamples. They include a highly readable structured language of proofs and a unique interactive development environment for editing live proof documents. Everything rests on the foundation conceived by Robin Milner for Edinburgh LCF: a proof kernel, using abstract types to ensure soundness and eliminate the need to store proofs. Compared with the research prototypes of the 1970s, Isabelle is a practical and versatile tool. It is used by system designers, mathematicians and many others.},
  journal = {Form. Asp. Comput.},
  month = {12},
  pages = {675–698},
  numpages = {24},
  keywords = {Isabelle, LCF, Interactive theorem proving, HOL}
}

@article{Yushkovskiy2018,
  author    = {Artem Yushkovskiy and
               Stavros Tripakis},
  title     = {Comparison of Two Theorem Provers: Isabelle/HOL and Coq},
  journal   = {CoRR},
  volume    = {abs/1808.09701},
  year      = {2018},
  url       = {http://arxiv.org/abs/1808.09701},
  eprinttype = {arXiv},
  eprint    = {1808.09701},
  timestamp = {Mon, 03 Sep 2018 13:36:40 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/abs-1808-09701.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@incollection{Harrison2014,
  author    = {John Harrison and
               Josef Urban and
               Freek Wiedijk},
  editor    = {J{\"{o}}rg H. Siekmann},
  title     = {History of Interactive Theorem Proving},
  booktitle = {Computational Logic},
  series    = {Handbook of the History of Logic},
  volume    = {9},
  pages     = {135--214},
  publisher = {Elsevier},
  year      = {2014},
  url       = {https://doi.org/10.1016/B978-0-444-51624-4.50004-6},
  doi       = {10.1016/B978-0-444-51624-4.50004-6},
  timestamp = {Thu, 05 Sep 2019 14:51:32 +0200},
  biburl    = {https://dblp.org/rec/series/hhl/HarrisonUW14.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@book{Wenzel2021,
  title = {The Isabelle/Isar Reference Manual},
  author = {Makarius Wenzel},
  year = {2021},
  url = {https://isabelle.in.tum.de/dist/Isabelle2021-1/doc/isar-ref.pdf}
}

@book{Nipkow2021,
  title = {A Proof Assistant for Higher-Order Logic},
  author = {Tobias Nipkow and Lawrence C. Paulson and Markus Wenzel},
  year = {2021},
  url = {https://isabelle.in.tum.de/doc/tutorial.pdf}
}

@article{Milner1984,
  author = {Robin Milner},
  title = {The use of machines to assist in rigorous proof},
  journal = {Philosophical Transactions of the Royal Society of London. Series A, Mathematical and Physical Sciences},
  volume = {312},
  number = {1522},
  pages = {411-422},
  year = {1984},
  doi = {10.1098/rsta.1984.0067},
  URL = {https://royalsocietypublishing.org/doi/abs/10.1098/rsta.1984.0067},
  eprint = {https://royalsocietypublishing.org/doi/pdf/10.1098/rsta.1984.0067},
  abstract = { A methodology for computer assisted proof is presented with an example. A central ingredient in the method is the presentation of tactics (or strategies) in an algorithmic metalanguage. Further, the same language is also used to express combinators, by which simple elementary tactics - which often correspond to the inference rules of the logic employed - are combined into more complex tactics, which may even be strategies complete for a class of problems. However, the emphasis is not upon completeness but upon providing a metalogical framework within which a user may express his insight into proof methods and may delegate routine (but error-prone) work to the computer. This method of tactic composition is presented at the start of the paper in the form of an elementary theory of goal-seeking. A second ingredient of the methodology is the stratification of machine-assisted proof by an ancestry graph of applied theories, and the example illustrates this stratification. In the final section, some recent developments and applications of the method are cited. }
}

@article{Martelli1982,
  author = {Alberto Martelli and Ugo Montanari},
  title = {An Efficient Unification Algorithm},
  year = {1982},
  issue_date = {April 1982},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {4},
  number = {2},
  issn = {0164-0925},
  url = {https://doi.org/10.1145/357162.357169},
  doi = {10.1145/357162.357169},
  journal = {ACM Trans. Program. Lang. Syst.},
  month = {apr},
  pages = {258–282},
  numpages = {25}
}

@inproceedings{Guilloud2022,
  author = {Simon Guilloud and Viktor Kunčak},
  title = {Equivalence Checking for Orthocomplemented Bisemilattices in Log-Linear Time},
  booktitle = {Proceedings of the 28th International Conference on Tools and Algorithms for the Construction and Analysis of Systems (TACAS~2022, Munich, Germany, April 2-7)},
  pages = {196-214},
  year = {2022},
  series = {LNCS~13244},
  publisher = {Springer},
  pdf = {https://www.sosy-lab.org/research/pub/2022-TACAS.The_Static_Analyzer_Frama-C_in_SV-COMP_Competition_Contribution.pdf},
  keyword = {Equivalence Checking},
}

@inproceedings{Stirling2010,
  author = {Colin Stirling},
  title = {Introduction to Decidability of Higher-Order Matching},
  year = {2010},
  isbn = {3642120318},
  publisher = {Springer-Verlag},
  address = {Berlin, Heidelberg},
  url = {https://doi.org/10.1007/978-3-642-12032-9_1},
  doi = {10.1007/978-3-642-12032-9_1},
  abstract = {Higher-order unification is the problem given an equation t=u containing free variables is there a solution substitution θ such that tθ and uθ have the same normal form? The terms t and u are from the simply typed lambda calculus and the same normal form is with respect to βη-equivalence. Higher-order matching is the particular instance when the term u is closed; can t be pattern matched to u? Although higher-order unification is undecidable, higher-order matching was conjectured to be decidable by Huet [2]. Decidability was shown in [7] via a game-theoretic analysis of β-reduction when component terms are in η-long normal form.In the talk we outline the proof of decidability. Besides the use of games to understand β-reduction, we also emphasize how tree automata can recognize terms of simply typed lambda calculus as developed in [1, 3-6].},
  booktitle = {Proceedings of the 13th International Conference on Foundations of Software Science and Computational Structures},
  location = {Paphos, Cyprus},
  series = {FOSSACS'10}
}

@software{Cassayre2020,
  author       = {Florian Cassayre},
  title        = {Theorem proving framework in Scala},
  month        = jun,
  year         = 2020,
  publisher    = {Zenodo},
  version      = {1.0},
  doi          = {10.5281/zenodo.4284080},
  url          = {https://doi.org/10.5281/zenodo.4284080}
}
